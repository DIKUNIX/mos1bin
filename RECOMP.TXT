This is file recomp.txt for Moscow SML 1.02 (6 September 1994)

                  HOW TO RECOMPILE MOSCOW SML

To recompile Moscow SML we need:

  (1) To recompile the "standard" Caml Light run-time system,
      to extend the set of virtual commands understood by the
      bytecode interpreter, thereby producing a new version of
      `camlrun.exe'.

  (2) To compile Moscow SML as a regular Caml Light program, to
      produce `mosml.exe'.


                  Recompiling `camlrun.exe'.

Let's suppose the sources of `camlrun.exe' are in the directory
`\caml386\src\runtime'. Then

  * Copy into that dirctory the file `mosml.c'

  * In the file `makefile' add `mosml.o' to OBJS, the list of
    all object files.

  * In the file `makefile' add `mosml.c' to PRIMS, the list of
    all object files that contain Caml Light primitives written
    in C. WARNING: `mosml.c' must be the last in the list
    PRIMS, in order for the codes of the standard primitives
    not to be disturbed!
  * In the file `makefile' add `-fno-defer-pop' to CFLAGS, the
    list of GCC options.

  * Recompile `camlrun.exe' by entering two commands:

        make depend
        make


                    Recompiling `mosml.exe'

`mosml.exe' is compiled as an ordinary Caml Light program. To
do so, enter two commands:

        make depend
        make


                 How to print the virtual code

If you want to see the virtual code generated by Moscow SML, 
uncomment the line

      (* printZamPhrase zam; *)

in the file `main.ml'.
